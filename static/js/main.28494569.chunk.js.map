{"version":3,"sources":["reducers/reducersImpl/roomReducer.js","reducers/reducersImpl/editorReducer.js","constants.js","reducers/index.js","ReducerConstants.js","Store.js","url.js","actions/editorAction.js","components/editor/EditorBodyComponent.js","socketConstants.js","components/editor/StdIOComponent.js","components/util/SelectComponent.js","components/editor/EditorNavComponent.js","actions/roomAction.js","components/editor/EditorComponent.js","App.js","index.js"],"names":["initialState","roomId","socket","userName","modes","java","language","code","stdin","stdout","stderr","python","javascript","theme","fontSize","showGutter","placeholder","isExecuting","error","combineReducers","room","state","type","payload","broadcastMode","editor","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","URL","startExecutingAction","dispatcher","connect","changeEditorCodeAction","dispatch","stopExecutingAction","console","log","executedResultAction","props","useEffect","on","data","undefined","success","style","margin","width","name","height","mode","showGuttet","value","onChange","emit","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","editorProps","$blockScrolling","TextArea","Input","display","flexDirection","changeStdinAction","output","length","outputBoxStyle","color","for","id","rows","e","target","disabled","Option","Select","SelectComponent","options","defaultValue","borderRadius","border","map","item","themeOptions","modeOptions","fontOptions","changeLanguageAction","changeThemeAction","themeName","changeFontAction","changeShowGutterAction","changeOpsToDefaultAction","setNameAction","padding","backgroundColor","boxShadow","marginBottom","icon","PoweroffOutlined","onClick","loading","witdh","float","lineHeight","marginRight","size","UserOutlined","prompt","initializeRoomAction","syncInitialStateAction","axios","post","then","response","catch","useState","setLoading","useParams","a","io","Socket","fetch","direction","heght","StdIOComponent","App","store","basename","exact","path","to","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28494569.chunk.js","sourcesContent":["import {\r\n    CHANGE_BROADCAST_MODE,  INITIALIZE_ROOM,\r\n    INITIALIZE_SOCKET, REMOVE_SOCKET,\r\n    SET_ROOM,\r\n    SET_ROOM_WITH_BROADCAST, SET_USER_NAME\r\n} from \"../../ReducerConstants\";\r\n\r\nconst initialState = {\r\n    roomId : null,\r\n    socket : null,\r\n    userName : \"\",\r\n\r\n}\r\n\r\nexport default (state = initialState , {type , payload})=>{\r\n    switch (type) {\r\n        case SET_ROOM : return {\r\n            ...state,\r\n            roomId : payload\r\n        }\r\n        case CHANGE_BROADCAST_MODE : return {\r\n            ...state,\r\n            broadcastMode: !state.broadcastMode\r\n        }\r\n        case SET_ROOM_WITH_BROADCAST : return {\r\n            roomId: payload.roomId,\r\n            broadcastMode: payload.broadcastMode\r\n        }\r\n        case INITIALIZE_SOCKET : return {\r\n            ...state,\r\n            socket: payload\r\n        }\r\n        case REMOVE_SOCKET : return {\r\n            ...state,\r\n            socket: null\r\n        }\r\n        case SET_USER_NAME : return {\r\n            ...state,\r\n            userName: payload\r\n        }\r\n        case INITIALIZE_ROOM : return {\r\n            ...state,\r\n            socket: payload.socket,\r\n            roomId: payload.roomId\r\n        }\r\n        default : return state\r\n    }\r\n}","import {\r\n    CHANGE_FONT,\r\n    CHANGE_CODE,\r\n    CHANGE_LANGUAGE,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_STDIN,\r\n    CHANGE_THEME,\r\n    CHANGE_OPS_TO_DEFAULT, EXECUTION_STATR, EXECUTION_STOP, INITIALIZE_INITIAL_CODE, ERROR, EXECUTED_CODE\r\n} from \"../../ReducerConstants\";\r\nimport {DEFAULT_LANGUAGE , DEFAULT_FONT_SIZE , DEFAULT_THEME} from \"../../constants\";\r\n\r\nconst modes = {\r\n    java : {\r\n        language : \"java\",\r\n        code : `public class Solution{\r\n    public static void main(String args[]){\r\n        System.out.println(\"Hello,\");\r\n    }\r\n}`\r\n        ,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n\r\n    },\r\n    python : {\r\n        language : \"python\",\r\n        code : `print(\"Hello, World!\")`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    },\r\n\r\n    javascript : {\r\n        language : \"javascript\",\r\n        code : `console.log(\"Hello, World!\");`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    theme : DEFAULT_THEME,\r\n    fontSize : DEFAULT_FONT_SIZE,\r\n    showGutter : true,\r\n    placeholder : \"Happy Coding\",\r\n    language : modes[DEFAULT_LANGUAGE].language,\r\n    code : modes[DEFAULT_LANGUAGE].code,\r\n    stdin : modes[DEFAULT_LANGUAGE].stdin,\r\n    stdout : modes[DEFAULT_LANGUAGE].stdout,\r\n    stderr : modes[DEFAULT_LANGUAGE].stderr,\r\n    isExecuting : false,\r\n    error : \"\"\r\n}\r\n\r\nexport default (state = initialState , {type, payload})=>{\r\n    switch (type) {\r\n        case CHANGE_LANGUAGE : return {\r\n            ...state,\r\n            language : modes[payload].language,\r\n            code : modes[payload].code,\r\n            stdin : modes[payload].stdin,\r\n            stdout : modes[payload].stdout,\r\n            stderr : modes[payload].stderr\r\n        }\r\n        case CHANGE_THEME : return {\r\n            ...state,\r\n            theme: payload\r\n        }\r\n        case CHANGE_FONT : return {\r\n            ...state,\r\n            fontSize: payload\r\n        }\r\n        case CHANGE_SHOW_GUTTER : return {\r\n            ...state,\r\n            showGutter: !state.showGutter\r\n        }\r\n        case CHANGE_STDIN : return {\r\n            ...state,\r\n            stdin: payload\r\n        }\r\n        case CHANGE_CODE : return {\r\n             ...state,\r\n            code : payload\r\n        }\r\n        case EXECUTION_STATR : return {\r\n            ...state,\r\n            isExecuting: true\r\n        }\r\n        case EXECUTION_STOP: return {\r\n            ...state,\r\n            isExecuting: false\r\n        }\r\n        case INITIALIZE_INITIAL_CODE : return {\r\n            ...state,\r\n            language : payload.language,\r\n            code : payload.code\r\n        }\r\n        case ERROR : return {\r\n            ...state,\r\n            error : payload\r\n        }\r\n        case EXECUTED_CODE : return {\r\n            ...state,\r\n            stdout: payload.stdout,\r\n            stderr : payload.stderr\r\n        }\r\n        case CHANGE_OPS_TO_DEFAULT : return initialState;\r\n        default : return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const DEFAULT_LANGUAGE = \"java\";\r\nexport const DEFAULT_THEME = \"monokai\";\r\nexport const DEFAULT_FONT_SIZE = 18;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport roomReducer from \"./reducersImpl/roomReducer\";\r\nimport editorReducer from \"./reducersImpl/editorReducer\";\r\n\r\nexport default combineReducers({\r\n\r\n    room : roomReducer,\r\n    editor : editorReducer\r\n\r\n})\r\n","export const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const CHANGE_FONT = \"CHANGE_FONT\";\r\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\r\nexport const CHANGE_SHOW_GUTTER = \"CHANGE_SHOW_GUTTER\";\r\nexport const CHANGE_WIDTH = \"CHANGE_WIDTH\";\r\nexport const CHANGE_OPS_TO_DEFAULT = \"CHANGE_OPS_TO_DEFAULT\";\r\nexport const INITIALIZE_SOCKET = \"INITIALIZE_SOCKET\";\r\nexport const REMOVE_SOCKET = \"REMOVE_SOCKET\";\r\nexport const SET_ROOM = \"SET_ROOM\";\r\nexport const CHANGE_BROADCAST_MODE = \"CHANGE_BROADCAST_MODE\";\r\nexport const SET_ROOM_WITH_BROADCAST = \"SET_ROOM_WITH_BROADCAST\";\r\nexport const CHANGE_STDIN = \"CHANGE_STDIN\";\r\nexport const CHANGE_CODE = \"CHANGE_CODE\";\r\nexport const EXECUTION_STATR = \"EXECUTION_STATR\";\r\nexport const EXECUTION_STOP = \"EXECUTION_STOP\";\r\nexport const INITIALIZE_INITIAL_CODE = \"INITIALIZE_INITIAL_CODE\";\r\nexport const ERROR = \"ERROR\";\r\nexport const SET_USER_NAME = \"SET_USER_NAME\";\r\nexport const INITIALIZE_ROOM = \"INITIALIZE_ROOM\";\r\nexport const EXECUTED_CODE = \"EXECUTED_CODE\";\r\n\r\n","import {createStore ,applyMiddleware, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\nexport default createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension && window.devToolsExtension()\r\n    )\r\n\r\n)\r\n\r\n","export const URL = (process.env.NODE_ENV || process.env.NODE_ENV==='development') ? \"http://localhost:4000\" : \"///\";","import {\r\n    CHANGE_LANGUAGE,\r\n    CHANGE_STDIN,\r\n    CHANGE_THEME,\r\n    CHANGE_FONT,\r\n    CHANGE_WIDTH,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_OPS_TO_DEFAULT,\r\n    CHANGE_CODE,\r\n    INITIALIZE_INITIAL_CODE, ERROR, EXECUTING_TRUE, EXECUTION_STATR, EXECUTION_STOP, EXECUTED_CODE\r\n} from \"../ReducerConstants\";\r\nimport axios from 'axios';\r\nimport {URL} from '../url';\r\n\r\n\r\n\r\n\r\n\r\nexport const changeLanguageAction =(language)=>(dispatch)=>{\r\n    return dispatch({\r\n        type : CHANGE_LANGUAGE,\r\n        payload : language\r\n    })\r\n}\r\n\r\nexport const changeThemeAction = (themeName)=>dispatch=>{\r\n    return dispatch({\r\n        type: CHANGE_THEME,\r\n        payload : themeName\r\n    });\r\n}\r\n\r\nexport const changeFontAction = (fontSize)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_FONT,\r\n        payload : fontSize,\r\n    })\r\n}\r\nexport const changeWidthAction =(width)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_WIDTH,\r\n        payload : width\r\n    })\r\n}\r\n\r\nexport const changeShowGutterAction =()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_SHOW_GUTTER,\r\n        payload : null\r\n    })\r\n}\r\n\r\nexport const changeOpsToDefaultAction=()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_OPS_TO_DEFAULT,\r\n        payload : null\r\n    })\r\n}\r\n\r\nexport const changeStdinAction=(stdin)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_STDIN,\r\n        payload : stdin\r\n    })\r\n}\r\n\r\nexport const changeEditorCodeAction = (code)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_CODE,\r\n        payload : code\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const syncInitialStateAction = (roomId)=>dispatch=>{\r\n    axios.post(URL+\"/syncstate\" , {roomId})\r\n        .then(response=>{\r\n            if((response.data.success!==null || response.data.success!==undefined) && response.data.success){\r\n                dispatch({\r\n                    type : INITIALIZE_INITIAL_CODE,\r\n                    payload : {\r\n                        language : response.data.data.language,\r\n                        code : response.data.data.code\r\n                    }\r\n                })\r\n            }else {\r\n                dispatch({\r\n                    type : ERROR,\r\n                    payload : response.data.data.error\r\n                })\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            dispatch({\r\n                type : ERROR,\r\n                payload : error\r\n            })\r\n        })\r\n}\r\n\r\nexport const startExecutingAction = ()=>dispatcher=>{\r\n    dispatcher({\r\n        type : EXECUTION_STATR,\r\n    })\r\n}\r\n\r\nexport const stopExecutingAction = ()=>dispatcher=>{\r\n    console.log(\"stop executing...\")\r\n    dispatcher({\r\n        type : EXECUTION_STOP,\r\n    })\r\n}\r\n\r\nexport const executedResultAction =({\r\n    stdin , stdout , stderr\r\n})=>dispatch=>{\r\n    dispatch({\r\n        type : EXECUTED_CODE,\r\n        payload : {\r\n            stdin,\r\n            stderr,\r\n            stdout\r\n        }\r\n    })\r\n}","import React, {useEffect} from \"react\";\r\nimport AceEditor from \"react-ace/\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport 'ace-builds/src-noconflict/theme-xcode';\r\nimport 'ace-builds/src-noconflict/theme-textmate';\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\r\nimport 'ace-builds/src-noconflict/theme-solarized_light';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changeEditorCodeAction,\r\n    executedResultAction,\r\n    startExecutingAction,\r\n    stopExecutingAction\r\n} from \"../../actions/editorAction\";\r\nimport {\r\n    EXECUTE_CODE, EXECUTE_CODE_START,\r\n    EXECUTED_CODE_RESULT,\r\n    PULL_CODE_ON_CHANGE,\r\n    PUSH_CODE_ON_CHANGE,\r\n} from \"../../socketConstants\";\r\n\r\n\r\n\r\nconst EditorBodyComponent = (props) => {\r\n    const {editor , room} = props;\r\n    const socket = room.socket;\r\n    const {changeEditorCodeAction,startExecutingAction , stopExecutingAction , executedResultAction} = props;\r\n\r\n    useEffect(()=>{\r\n        socket.on(PULL_CODE_ON_CHANGE , (data)=>{\r\n            changeEditorCodeAction(data.code);\r\n        })\r\n\r\n        socket.on(EXECUTE_CODE_START , data=>{\r\n            startExecutingAction();\r\n        })\r\n        socket.on(EXECUTED_CODE_RESULT , data=>{\r\n            stopExecutingAction();\r\n            if(data.success!==undefined || data.success!==null){\r\n                executedResultAction({\r\n                    stdin : data.data.stdin,\r\n                    stdout : data.data.stdout,\r\n                    stderr : data.data.stderr\r\n                })\r\n            }\r\n        })\r\n\r\n    } , []);\r\n\r\n    const handleCodeOnChange = (code)=>{\r\n        changeEditorCodeAction(code);\r\n        let data = {\r\n            roomId : room.roomId,\r\n            userName : room.userName,\r\n            code : code,\r\n        }\r\n        socket.emit(PUSH_CODE_ON_CHANGE , data);\r\n\r\n    }\r\n    return <div style={{margin : \"2px\" , width : \"70%\"}}>\r\n            <AceEditor\r\n            name = \"defaultCode\"\r\n            width = \"100%\"\r\n            height = \"80vh\"\r\n            mode={editor.language}\r\n            theme={editor.theme}\r\n            fontSize = {editor.fontSize}\r\n            showGuttet ={editor.showGutter}\r\n            placeholder = {editor.placeholder}\r\n            value = {editor.code}\r\n            onChange={handleCodeOnChange}\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 2,\r\n            }}\r\n            editorProps={{ $blockScrolling: true }}\r\n         />\r\n        </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    editor : state.editor,\r\n    room : state.room\r\n})\r\n\r\nexport default connect(mapStateToProps ,\r\n    {\r\n        changeEditorCodeAction,\r\n        startExecutingAction,\r\n        stopExecutingAction,\r\n        executedResultAction\r\n    })\r\n(EditorBodyComponent)","export const PUSH_CODE_ON_CHANGE = \"PUSH_CODE_ON_CHANGE\";\r\nexport const PUSH_LANGUAGE_ON_CHANGE = \"PUSH_LANGUAGE_ON_CHANGE\";\r\nexport const JOIN_GROUP = \"JOIN_GROUP\";\r\nexport const PULL_CODE_ON_CHANGE = \"PULL_CODE_ON_CHANGE\";\r\nexport const EXECUTE_CODE = \"EXECUTE_CODE\";\r\nexport const EXECUTED_CODE_RESULT = \"EXECUTED_CODE_RESULT\";\r\nexport const EXECUTE_CODE_START = \"EXECUTE_CODE_START\";","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport {connect} from 'react-redux';\r\nimport {changeStdinAction} from \"../../actions/editorAction\";\r\n\r\n\r\n\r\nconst {TextArea} = Input;\r\nconst style = {\r\n    display : \"flex\",\r\n    flexDirection : \"column\",\r\n    width : \"30%\"\r\n}\r\n\r\n\r\nconst StdIO = (props) => {\r\n    const {editor} = props;\r\n    const {changeStdinAction} = props;\r\n    const output = editor.stderr.length>0 ? editor.stderr : editor.stdout;\r\n    const error = editor.stderr.length>0 ? true : false;\r\n    const outputBoxStyle = {\r\n        color : error?\"red\":\"black\",\r\n    }\r\n\r\n\r\n    return <div style={style}>\r\n        <label for = \"stdin\"><b>Input</b></label>\r\n        <TextArea id=\"stdin\" rows={9} value={editor.stdin} onChange={(e)=>changeStdinAction(e.target.value)} />\r\n        <label for = \"stdout\"><b>Output</b></label>\r\n        <TextArea id=\"stdout\" rows={9} value={output} style={outputBoxStyle} disabled={true}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editor : state.editor\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n{\r\n    changeStdinAction\r\n}\r\n)(StdIO);","import {Select} from \"antd\";\r\nimport React from \"react\";\r\nconst Option = Select.Option;\r\nconst SelectComponent = ({name , options , defaultValue ,width , onChange})=>{\r\n    const style = {\r\n        margin : \"0 2px 0 2px\",\r\n        borderRadius : \"0\",\r\n        border : \"none\",\r\n        width : `${width}px`\r\n    }\r\n\r\n    return <Select name = {name}  value = {defaultValue} style = {style} onChange = {onChange}>\r\n        {options.map(item=>(\r\n            <Option value = {item.value}>{item.name}</Option>\r\n        ))}\r\n    </Select>\r\n}\r\n\r\nexport default SelectComponent;","import React, {useEffect} from \"react\";\r\nimport Select from '../util/SelectComponent';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeThemeAction,\r\n    changeFontAction,\r\n    changeShowGutterAction,\r\n    changeOpsToDefaultAction,\r\n    startExecutingAction\r\n} from \"../../actions/editorAction\"\r\nimport {changeLanguageAction} from \"../../actions/editorAction\";\r\nimport {Button} from \"antd\";\r\nimport {PoweroffOutlined} from '@ant-design/icons';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {setNameAction} from \"../../actions/roomAction\";\r\nimport {EXECUTE_CODE} from \"../../socketConstants\";\r\n\r\nconst EditorNavComponent=(props)=>{\r\n    const {editor , room} = props;\r\n    const socket = room.socket;\r\n    const {\r\n            changeThemeAction ,\r\n            changeFontAction ,\r\n            changeLanguageAction ,\r\n            changeOpsToDefaultAction,\r\n            setNameAction,\r\n            startExecutingAction\r\n          } = props;\r\n    const handleSetName=()=>{\r\n        let name = window.prompt(\"Enter your name.\");\r\n        console.log(name);\r\n        if(name!==''){\r\n            setNameAction(name);\r\n        }\r\n    }\r\n\r\n    const handleExecuteOnClick = ()=>{\r\n        startExecutingAction();\r\n        let data = {\r\n            roomId : room.roomId,\r\n            code : editor.code,\r\n            language : editor.language,\r\n            userName : room.userName,\r\n            stdin : editor.stdin\r\n        }\r\n        socket.emit(EXECUTE_CODE , data);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ height : \"40px\" , padding : \"4px\" , backgroundColor : \"#dedede\", boxShadow: \"0px 1px 4px 0px black\" , marginBottom : \"10px\"}}>\r\n            <Select\r\n                name = \"theme\"\r\n                options = {themeOptions}\r\n                defaultValue={editor.theme}\r\n                // width = {130}\r\n                onChange={changeThemeAction}\r\n            />\r\n            <Select\r\n                name = \"mode\"\r\n                options = {modeOptions}\r\n                defaultValue={editor.language}\r\n                // width = {100}\r\n                onChange={changeLanguageAction}\r\n            />\r\n            <Select\r\n                name = \"fontSize\"\r\n                options={fontOptions}\r\n                defaultValue={editor.fontSize}\r\n                // width={70}\r\n                onChange={changeFontAction}\r\n            />\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"green\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                icon = {<PoweroffOutlined/>}\r\n                onClick = {handleExecuteOnClick}\r\n                loading = {editor.isExecuting}\r\n            >Run</Button>\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"red\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                onClick = {changeOpsToDefaultAction}\r\n            >Reset</Button>\r\n            <div style={{\r\n                display : \"inline\",\r\n                witdh : \"auto\",\r\n                float : \"right\",\r\n                height : \"40px\"\r\n\r\n            }}>\r\n                <div style={{display : \"inline\" , lineHeight : \"30px\", marginRight : \"5px\"}}>\r\n                    {room.userName!==\"\" ?\r\n                        <div >\r\n                            <Avatar style={{margin : \"0 5px 0 5px\"}} size={25} icon={<UserOutlined />} />\r\n                            <h4 style={{display : \"inline\" , marginRight : \"10px\"}}>{room.userName}</h4>\r\n                        </div> :\r\n                        <Button onClick={handleSetName}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst themeOptions = [\r\n    {\r\n        name : \"Monokai\",\r\n        value : \"monokai\",\r\n    },\r\n    {\r\n        name : \"GitHub\",\r\n        value : \"github\",\r\n    },\r\n    {\r\n        name : \"Kuroir\",\r\n        value : \"kuroir\",\r\n    },\r\n    {\r\n        name : \"Xcode\",\r\n        value : \"xcode\",\r\n    },\r\n    {\r\n        name : \"TextMate\",\r\n        value : \"textmate\",\r\n    },\r\n    {\r\n        name : \"Solarized Dark\",\r\n        value : \"solarized_dark\",\r\n    },\r\n    {\r\n        name : \"Solarized Light\",\r\n        value : \"solarized_light\",\r\n    },\r\n]\r\n\r\nconst modeOptions = [\r\n    {\r\n        name : \"Java\",\r\n        value : \"java\"\r\n    },\r\n    {\r\n        name : \"Python\",\r\n        value : \"python\"\r\n    },\r\n    {\r\n        name : \"JavaScript\",\r\n        value : \"javascript\"\r\n    },\r\n\r\n]\r\n\r\nconst fontOptions = [\r\n    {\r\n        name : 12,\r\n        value : 12\r\n    },\r\n    {\r\n        name : 14,\r\n        value : 14\r\n    },\r\n    {\r\n        name : 16,\r\n        value : 16\r\n    },\r\n    {\r\n        name : 18,\r\n        value : 18\r\n    },\r\n    {\r\n        name: 20,\r\n        value : 20\r\n    },\r\n    {\r\n        name : 24,\r\n        value : 24\r\n    },\r\n    {\r\n        name : 28,\r\n        value : 28\r\n    },\r\n    {\r\n        name : 32,\r\n        value : 32\r\n    },\r\n    {\r\n        name : 36,\r\n        value: 36\r\n    },\r\n    {\r\n        name : 40,\r\n        value : 40\r\n    }]\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editor : state.editor,\r\n    room : state.room\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps ,\r\n    {\r\n        changeLanguageAction,\r\n        changeThemeAction ,\r\n        changeFontAction ,\r\n        changeShowGutterAction ,\r\n        changeOpsToDefaultAction,\r\n        setNameAction,\r\n        startExecutingAction\r\n\r\n    })(EditorNavComponent)","import {INITIALIZE_ROOM, SET_USER_NAME} from \"../ReducerConstants\";\r\n\r\nexport const initializeRoomAction = (socket , roomId)=>dispatch=>{\r\n    dispatch({\r\n        type : INITIALIZE_ROOM,\r\n        payload : {\r\n            socket,\r\n            roomId\r\n        }\r\n    })\r\n}\r\n\r\nexport const setNameAction = (name)=>dispatch=>{\r\n    dispatch({\r\n        type : SET_USER_NAME,\r\n        payload : name\r\n    })\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport EditorBodyComponent from \"./EditorBodyComponent\";\r\nimport StdIOComponent from \"./StdIOComponent\";\r\nimport EditorOpsComponent from \"./EditorNavComponent\";\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nimport io from 'socket.io-client'\r\nimport {connect} from \"react-redux\";\r\nimport {syncInitialStateAction} from \"../../actions/editorAction\";\r\nimport {initializeRoomAction} from \"../../actions/roomAction\";\r\nimport {JOIN_GROUP} from \"../../socketConstants\";\r\nimport {URL} from '../../url';\r\n\r\nconst EditorComponent = (props) => {\r\n    const [loading , setLoading] = useState(true);\r\n    const {roomId} = useParams();\r\n    const {initializeRoomAction , syncInitialStateAction} = props;\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        async function fetch(setLoading){\r\n            const Socket = await io(URL);\r\n            await initializeRoomAction(Socket , roomId);\r\n            await syncInitialStateAction(roomId);\r\n            Socket.emit(JOIN_GROUP , {roomId});\r\n            setLoading(false);\r\n        };\r\n        fetch(setLoading);\r\n    } , [roomId])\r\n    return <div>\r\n        {loading ? <div>Loading</div> : <div>\r\n            <EditorOpsComponent/>\r\n            <div style={{display : \"flex\" , direction : \"row\" , width : \"100%\" , heght : \"100vh\"}}>\r\n                <EditorBodyComponent/>\r\n                <StdIOComponent/>\r\n            </div>\r\n        </div>}\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps , {initializeRoomAction , syncInitialStateAction})(EditorComponent);","import React from 'react';\nimport './App.css';\nimport store from './Store';\nimport {Provider} from \"react-redux\";\nimport Editor from './components/editor/EditorComponent'\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <Router basename={\"\"}>\n              <Switch>\n                  <Route exact path=\"/\">\n                      <Redirect to = {`/${Date.now()}`}/>\n                  </Route>\n                  <Route exact path=\"/:roomId\">\n                      <Editor/>\n                  </Route>\n              </Switch>\n          </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}