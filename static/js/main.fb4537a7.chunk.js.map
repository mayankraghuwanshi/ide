{"version":3,"sources":["reducers/reducersImpl/roomReducer.js","reducers/reducersImpl/editorReducer.js","constants.js","reducers/index.js","actionReducerConstants.js","Store.js","components/editor/EditorBodyComponent.js","actions/editorAction.js","components/editor/StdIOComponent.js","components/util/SelectComponent.js","components/editor/EditorNavComponent.js","components/editor/EditorComponent.js","App.js","index.js"],"names":["initialState","liveMode","roomId","socket","modes","java","language","code","stdin","stdout","stderr","python","javascript","theme","fontSize","showGutter","placeholder","isExecuting","combineReducers","room","state","type","payload","broadcastMode","editor","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","connect","changeEditorCodeAction","dispatch","props","style","margin","width","name","height","mode","showGuttet","value","onChange","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","editorProps","$blockScrolling","TextArea","Input","display","flexDirection","changeStdinAction","output","length","outputBoxStyle","color","for","id","rows","e","target","disabled","Option","Select","SelectComponent","options","defaultValue","borderRadius","border","map","item","themeOptions","modeOptions","fontOptions","changeLanguageAction","changeThemeAction","themeName","changeFontAction","changeShowGutterAction","changeOpsToDefaultAction","useEffect","backgroundColor","icon","PoweroffOutlined","onClick","loading","initializeSocketAction","useParams","console","log","io","direction","heght","StdIOComponent","App","store","basename","exact","path","to","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb4537a7.chunk.js","sourcesContent":["import {\r\n    CHANGE_BROADCAST_MODE, INITIALIZE_LIVE_MODE, INITIALIZE_SINGLE_MODE,\r\n    INITIALIZE_SOCKET, REMOVE_SOCKET,\r\n    SET_ROOM,\r\n    SET_ROOM_WITH_BROADCAST\r\n} from \"../../actionReducerConstants\";\r\n\r\nconst initialState = {\r\n    liveMode : true,\r\n    roomId : null,\r\n    socket : null,\r\n\r\n}\r\n\r\nexport default (state = initialState , {type , payload})=>{\r\n    switch (type) {\r\n        case SET_ROOM : return {\r\n            ...state,\r\n            roomId : payload\r\n        }\r\n        case CHANGE_BROADCAST_MODE : return {\r\n            ...state,\r\n            broadcastMode: !state.broadcastMode\r\n        }\r\n        case SET_ROOM_WITH_BROADCAST : return {\r\n            roomId: payload.roomId,\r\n            broadcastMode: payload.broadcastMode\r\n        }\r\n        case INITIALIZE_SOCKET : return {\r\n            ...state,\r\n            socket: payload\r\n        }\r\n        case REMOVE_SOCKET : return {\r\n            ...state,\r\n            socket: null\r\n        }\r\n        case INITIALIZE_LIVE_MODE : return {\r\n            ...state,\r\n            roomId: payload.roomId,\r\n            socket : payload.socket,\r\n            liveMode: true\r\n        }\r\n        case INITIALIZE_SINGLE_MODE : return {\r\n            ...state,\r\n            roomId: payload.roomId,\r\n            socket : null,\r\n            liveMode: false\r\n        }\r\n        default : return state\r\n    }\r\n}","import {\r\n    CHANGE_FONT,\r\n    CHANGE_CODE,\r\n    CHANGE_LANGUAGE,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_STDIN,\r\n    CHANGE_THEME,\r\n    CHANGE_OPS_TO_DEFAULT, EXECUTION_STATR, EXECUTION_STOP\r\n} from \"../../actionReducerConstants\";\r\nimport {DEFAULT_LANGUAGE , DEFAULT_FONT_SIZE , DEFAULT_THEME} from \"../../constants\";\r\n\r\nconst modes = {\r\n    java : {\r\n        language : \"java\",\r\n        code : `public class Solution{\r\n    public static void main(String args[]){\r\n        System.out.println(\"Hello, World!\");\r\n    }\r\n}`\r\n        ,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n\r\n    },\r\n    python : {\r\n        language : \"python\",\r\n        code : `print(\"Hello, World!\")`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    },\r\n\r\n    javascript : {\r\n        language : \"javascript\",\r\n        code : `console.log(\"Hello, World!\");`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    theme : DEFAULT_THEME,\r\n    fontSize : DEFAULT_FONT_SIZE,\r\n    showGutter : true,\r\n    placeholder : \"Happy Coding\",\r\n    language : modes[DEFAULT_LANGUAGE].language,\r\n    code : modes[DEFAULT_LANGUAGE].code,\r\n    stdin : modes[DEFAULT_LANGUAGE].stdin,\r\n    stdout : modes[DEFAULT_LANGUAGE].stdout,\r\n    stderr : modes[DEFAULT_LANGUAGE].stderr,\r\n    isExecuting : false\r\n}\r\n\r\nexport default (state = initialState , {type, payload})=>{\r\n    switch (type) {\r\n        case CHANGE_LANGUAGE : return {\r\n            ...state,\r\n            language : modes[payload].language,\r\n            code : modes[payload].code,\r\n            stdin : modes[payload].stdin,\r\n            stdout : modes[payload].stdout,\r\n            stderr : modes[payload].stderr\r\n        }\r\n        case CHANGE_THEME : return {\r\n            ...state,\r\n            theme: payload\r\n        }\r\n        case CHANGE_FONT : return {\r\n            ...state,\r\n            fontSize: payload\r\n        }\r\n        case CHANGE_SHOW_GUTTER : return {\r\n            ...state,\r\n            showGutter: !state.showGutter\r\n        }\r\n        case CHANGE_STDIN : return {\r\n            ...state,\r\n            stdin: payload\r\n        }\r\n        case CHANGE_CODE : return {\r\n             ...state,\r\n            code : payload\r\n        }\r\n        case EXECUTION_STATR : return {\r\n            ...state,\r\n            isExecuting: true\r\n        }\r\n        case EXECUTION_STOP: return {\r\n            ...state,\r\n            isExecuting: false\r\n        }\r\n\r\n        case CHANGE_OPS_TO_DEFAULT : return initialState;\r\n        default : return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const DEFAULT_LANGUAGE = \"java\";\r\nexport const DEFAULT_THEME = \"monokai\";\r\nexport const DEFAULT_FONT_SIZE = 18;\r\nexport const URL = \"http://localhost:4000\";\r\n","import {combineReducers} from \"redux\";\r\nimport roomReducer from \"./reducersImpl/roomReducer\";\r\nimport editorReducer from \"./reducersImpl/editorReducer\";\r\n\r\nexport default combineReducers({\r\n\r\n    room : roomReducer,\r\n    editor : editorReducer\r\n\r\n})\r\n","export const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const CHANGE_FONT = \"CHANGE_FONT\";\r\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\r\nexport const CHANGE_SHOW_GUTTER = \"CHANGE_SHOW_GUTTER\";\r\nexport const CHANGE_WIDTH = \"CHANGE_WIDTH\";\r\nexport const CHANGE_OPS_TO_DEFAULT = \"CHANGE_OPS_TO_DEFAULT\";\r\nexport const INITIALIZE_SOCKET = \"INITIALIZE_SOCKET\";\r\nexport const REMOVE_SOCKET = \"REMOVE_SOCKET\";\r\nexport const SET_ROOM = \"SET_ROOM\";\r\nexport const CHANGE_BROADCAST_MODE = \"CHANGE_BROADCAST_MODE\";\r\nexport const SET_ROOM_WITH_BROADCAST = \"SET_ROOM_WITH_BROADCAST\";\r\nexport const CHANGE_STDIN = \"CHANGE_STDIN\";\r\nexport const CHANGE_CODE = \"CHANGE_CODE\";\r\nexport const EXECUTION_STATR = \"EXECUTION_STATR\";\r\nexport const EXECUTION_STOP = \"EXECUTION_STATR\";\r\nexport const INITIALIZE_LIVE_MODE = \"INITIALIZE_LIVE_MODE\";\r\nexport const INITIALIZE_SINGLE_MODE = \"INITIALIZE_SINGLE_MODE\";\r\n","import {createStore ,applyMiddleware, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\nexport default createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension && window.devToolsExtension()\r\n    )\r\n\r\n)\r\n\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace/\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport 'ace-builds/src-noconflict/theme-xcode';\r\nimport 'ace-builds/src-noconflict/theme-textmate';\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\r\nimport 'ace-builds/src-noconflict/theme-solarized_light';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {changeEditorCodeAction} from \"../../actions/editorAction\";\r\n\r\n\r\n\r\nconst EditorBodyComponent = (props) => {\r\n    const {editor} = props;\r\n    const {changeEditorCodeAction} = props;\r\n\r\n    return <div style={{margin : \"2px\" , width : \"70%\"}}>\r\n            <AceEditor\r\n            name = \"defaultCode\"\r\n            width = \"100%\"\r\n            height = \"80vh\"\r\n            mode={editor.language}\r\n            theme={editor.theme}\r\n            fontSize = {editor.fontSize}\r\n            showGuttet ={editor.showGutter}\r\n            placeholder = {editor.placeholder}\r\n            value = {editor.code}\r\n            onChange={changeEditorCodeAction}\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 2,\r\n            }}\r\n            editorProps={{ $blockScrolling: true }}\r\n         />\r\n        </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    editor : state.editor\r\n})\r\n\r\nexport default connect(mapStateToProps ,\r\n    {\r\n        changeEditorCodeAction\r\n    })\r\n(EditorBodyComponent)","import {\r\n    CHANGE_LANGUAGE,\r\n    CHANGE_STDIN,\r\n    CHANGE_THEME,\r\n    CHANGE_FONT,\r\n    CHANGE_WIDTH,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_OPS_TO_DEFAULT, CHANGE_CODE, INITIALIZE_LIVE_MODE, INITIALIZE_SINGLE_MODE, INITIALIZE_SOCKET\r\n} from \"../actionReducerConstants\";\r\nimport io from 'socket.io-client'\r\nimport axios from 'axios';\r\nconst URL = \"http://localhost:4000\"\r\n\r\n\r\n\r\n\r\n\r\nexport const changeLanguageAction =(language)=>(dispatch)=>{\r\n    return dispatch({\r\n        type : CHANGE_LANGUAGE,\r\n        payload : language\r\n    })\r\n}\r\n\r\nexport const changeThemeAction = (themeName)=>dispatch=>{\r\n    return dispatch({\r\n        type: CHANGE_THEME,\r\n        payload : themeName\r\n    });\r\n}\r\n\r\nexport const changeFontAction = (fontSize)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_FONT,\r\n        payload : fontSize,\r\n    })\r\n}\r\nexport const changeWidthAction =(width)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_WIDTH,\r\n        payload : width\r\n    })\r\n}\r\n\r\nexport const changeShowGutterAction =()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_SHOW_GUTTER,\r\n        payload : null\r\n    })\r\n}\r\n\r\nexport const changeOpsToDefaultAction=()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_OPS_TO_DEFAULT,\r\n        payload : null\r\n    })\r\n}\r\n\r\nexport const changeStdinAction=(stdin)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_STDIN,\r\n        payload : stdin\r\n    })\r\n}\r\n\r\nexport const changeEditorCodeAction = (code)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_CODE,\r\n        payload : code\r\n    })\r\n}\r\n\r\n\r\nexport const initializeConnectionAction = (roomId)=>dispatch=>{\r\n    axios.get(URL+`/api/${roomId}`)\r\n        .then(response=>{\r\n            if(response.data && response.data!==undefined){\r\n                if(response.data.isLive){\r\n                    dispatch({\r\n                        type : INITIALIZE_LIVE_MODE,\r\n                        payload : {\r\n                            roomId : response.data.roomId,\r\n                            socket : io(URL)\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type : INITIALIZE_SINGLE_MODE,\r\n                        payload : roomId\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch(error=>console.error(error));\r\n}\r\n\r\nexport const initializeSocketAction = (socket)=>dispatch=>{\r\n    dispatch({\r\n        type : INITIALIZE_SOCKET,\r\n        payload : socket\r\n    })\r\n}\r\n\r\nexport const initializeNewRoomAction = ()=>dispatch=>{\r\n\r\n}","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport {connect} from 'react-redux';\r\nimport {changeStdinAction} from \"../../actions/editorAction\";\r\n\r\n\r\n\r\nconst {TextArea} = Input;\r\nconst style = {\r\n    display : \"flex\",\r\n    flexDirection : \"column\",\r\n    width : \"30%\"\r\n}\r\n\r\n\r\nconst StdIO = (props) => {\r\n    const {editor} = props;\r\n    const {changeStdinAction} = props;\r\n    const output = editor.stderr.length>0 ? editor.stderr : editor.stdout;\r\n    const error = editor.stderr.length>0 ? true : false;\r\n    const outputBoxStyle = {\r\n        color : error?\"red\":\"black\",\r\n    }\r\n\r\n\r\n    return <div style={style}>\r\n        <label for = \"stdin\"><b>Input</b></label>\r\n        <TextArea id=\"stdin\" rows={9} value={editor.stdin} onChange={(e)=>changeStdinAction(e.target.value)} />\r\n        <label for = \"stdout\"><b>Output</b></label>\r\n        <TextArea id=\"stdout\" rows={9} value={output} style={outputBoxStyle} disabled={true}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editor : state.editor\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n{\r\n    changeStdinAction\r\n}\r\n)(StdIO);","import {Select} from \"antd\";\r\nimport React from \"react\";\r\nconst Option = Select.Option;\r\nconst SelectComponent = ({name , options , defaultValue ,width , onChange})=>{\r\n\r\n    const style = {\r\n        margin : \"0 2px 0 2px\",\r\n        borderRadius : \"0\",\r\n        border : \"none\",\r\n        width : `${width}px`\r\n    }\r\n    return <Select name = {name} defaultValue = {defaultValue} style = {style} onChange = {onChange}>\r\n        {options.map(item=>(\r\n            <Option value = {item.value}>{item.name}</Option>\r\n        ))}\r\n    </Select>\r\n}\r\n\r\nexport default SelectComponent;","import React, {useEffect} from \"react\";\r\nimport Select from '../util/SelectComponent';\r\nimport {connect} from \"react-redux\";\r\nimport {changeThemeAction , changeFontAction ,changeShowGutterAction, changeOpsToDefaultAction} from \"../../actions/editorAction\"\r\nimport {changeLanguageAction} from \"../../actions/editorAction\";\r\nimport {Button} from \"antd\";\r\nimport {PoweroffOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst EditorNavComponent=(props)=>{\r\n    const {editor} = props;\r\n    const {\r\n            changeThemeAction ,\r\n            changeFontAction ,\r\n            changeLanguageAction ,\r\n            changeOpsToDefaultAction,\r\n          } = props;\r\n\r\n    useEffect(()=>{\r\n        // console.log(editor)\r\n    } , [editor])\r\n\r\n    return (\r\n        <div style={{margin : \"2px\" }}>\r\n            <Select\r\n                name = \"theme\"\r\n                options = {themeOptions}\r\n                defaultValue={editor.theme}\r\n                // width = {130}\r\n                onChange={changeThemeAction}\r\n            />\r\n            <Select\r\n                name = \"mode\"\r\n                options = {modeOptions}\r\n                defaultValue={editor.language}\r\n                // width = {100}\r\n                onChange={changeLanguageAction}\r\n            />\r\n            <Select\r\n                name = \"fontSize\"\r\n                options={fontOptions}\r\n                defaultValue={editor.fontSize}\r\n                // width={70}\r\n                onChange={changeFontAction}\r\n            />\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"green\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                icon = {<PoweroffOutlined/>}\r\n                onClick = {()=>null}\r\n                loading = {false}\r\n            >Run</Button>\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"red\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                onClick = {changeOpsToDefaultAction}\r\n            >Reset</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst themeOptions = [\r\n    {\r\n        name : \"Monokai\",\r\n        value : \"monokai\",\r\n    },\r\n    {\r\n        name : \"GitHub\",\r\n        value : \"github\",\r\n    },\r\n    {\r\n        name : \"Kuroir\",\r\n        value : \"kuroir\",\r\n    },\r\n    {\r\n        name : \"Xcode\",\r\n        value : \"xcode\",\r\n    },\r\n    {\r\n        name : \"TextMate\",\r\n        value : \"textmate\",\r\n    },\r\n    {\r\n        name : \"Solarized Dark\",\r\n        value : \"solarized_dark\",\r\n    },\r\n    {\r\n        name : \"Solarized Light\",\r\n        value : \"solarized_light\",\r\n    },\r\n]\r\n\r\nconst modeOptions = [\r\n    {\r\n        name : \"Java\",\r\n        value : \"java\"\r\n    },\r\n    {\r\n        name : \"Python\",\r\n        value : \"python\"\r\n    },\r\n    {\r\n        name : \"JavaScript\",\r\n        value : \"javascript\"\r\n    },\r\n\r\n]\r\n\r\nconst fontOptions = [\r\n    {\r\n        name : 12,\r\n        value : 12\r\n    },\r\n    {\r\n        name : 14,\r\n        value : 14\r\n    },\r\n    {\r\n        name : 16,\r\n        value : 16\r\n    },\r\n    {\r\n        name : 18,\r\n        value : 18\r\n    },\r\n    {\r\n        name: 20,\r\n        value : 20\r\n    },\r\n    {\r\n        name : 24,\r\n        value : 24\r\n    },\r\n    {\r\n        name : 28,\r\n        value : 28\r\n    },\r\n    {\r\n        name : 32,\r\n        value : 32\r\n    },\r\n    {\r\n        name : 36,\r\n        value: 36\r\n    },\r\n    {\r\n        name : 40,\r\n        value : 40\r\n    }]\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editor : state.editor,\r\n    socket : state.socket,\r\n    room : state.room\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps ,\r\n    {\r\n        changeLanguageAction,\r\n        changeThemeAction ,\r\n        changeFontAction ,\r\n        changeShowGutterAction ,\r\n        changeOpsToDefaultAction,\r\n    })(EditorNavComponent)","import React, {useEffect, useState} from \"react\";\r\nimport EditorBodyComponent from \"./EditorBodyComponent\";\r\nimport StdIOComponent from \"./StdIOComponent\";\r\nimport EditorOpsComponent from \"./EditorNavComponent\";\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport io from 'socket.io-client'\r\nimport {connect} from \"react-redux\";\r\nimport {initializeSocketAction} from \"../../actions/editorAction\";\r\nconst URL = \"http://localhost:4000\"\r\n\r\nconst EditorComponent = (props) => {\r\n    const {roomId} = useParams();\r\n    const {initializeSocketAction} = props;\r\n    console.log(roomId);\r\n    useEffect(()=>{\r\n        initializeSocketAction(io(URL));\r\n    } , [roomId])\r\n    return <div>\r\n        <EditorOpsComponent/>\r\n        <div style={{display : \"flex\" , direction : \"row\" , width : \"100%\" , heght : \"100vh\"}}>\r\n            <EditorBodyComponent/>\r\n            <StdIOComponent/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps , {initializeSocketAction})(EditorComponent);","import React from 'react';\nimport './App.css';\nimport store from './Store';\nimport {Provider} from \"react-redux\";\nimport Editor from './components/editor/EditorComponent'\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <Router basename={\"\"}>\n              <Switch>\n                  <Route exact path=\"/\">\n                      <Redirect to = {`/${Date.now()}`}/>\n                  </Route>\n                  <Route exact path=\"/:roomId\">\n                      <Editor/>\n                  </Route>\n              </Switch>\n          </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}