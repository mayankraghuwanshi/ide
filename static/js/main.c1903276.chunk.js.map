{"version":3,"sources":["reducers/editorOptionReducer.js","constants.js","reducers/editorModeReducer.js","reducers/roomReducer.js","reducers/socketReducer.js","reducers/index.js","actionReducerConstants.js","Store.js","components/SelectComponent.js","components/EditorOpsComponent.js","actions/editorModeAction.js","actions/editorOptionAction.js","actions/editorOperationAction.js","components/EditorComponent.js","components/StdIOComponent.js","components/EditorMainComponent.js","actions/socketAction.js","App.js","index.js"],"names":["initialState","theme","fontSize","showGutter","placeholder","MODES","java","name","code","stdin","stdout","stderr","python","javascript","broadcastMode","roomId","socket","combineReducers","editorMode","state","type","payload","editorOption","width","room","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","Option","Select","SelectComponent","options","defaultValue","onChange","style","margin","borderRadius","border","map","item","value","themeOptions","modeOptions","fontOptions","connect","changeLanguageAction","language","dispatch","changeThemeAction","themeName","changeFontAction","changeShowGutterAction","changeOpsToDefaultAction","executeCodeAction","console","log","executeSingleModeAction","axios","post","then","response","data","catch","error","props","backgroundColor","icon","PoweroffOutlined","onClick","loading","editorCodeOnChangeAction","height","mode","showGuttet","shorthand","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","editorProps","$blockScrolling","TextArea","Input","display","flexDirection","changeStdinAction","output","length","outputBoxStyle","color","for","id","rows","e","target","disabled","initialiseSocketAction","useEffect","Socket","io","direction","heght","StdIOComponent","App","store","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1903276.chunk.js","sourcesContent":["import CONSTANT from \"../constants\";\r\nimport {\r\n    CHANGE_FONT,\r\n    CHANGE_OPS_TO_DEFAULT,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_THEME,\r\n    CHANGE_WIDTH\r\n} from '../actionReducerConstants';\r\n\r\nconst initialState = {\r\n    theme : CONSTANT.DEFAULT_THEME,\r\n    fontSize : CONSTANT.DEFAULT_FONT_SIZE,\r\n    showGutter : false,\r\n    placeholder : \"Happy coding...\"\r\n\r\n}\r\n\r\nexport default (state = initialState , {payload , type})=>{\r\n    switch (type) {\r\n        case CHANGE_THEME : {\r\n            return {\r\n                ...state,\r\n                theme : payload\r\n            }\r\n        }\r\n        case CHANGE_FONT : return {\r\n            ...state,\r\n            fontSize: payload\r\n        }\r\n        case CHANGE_SHOW_GUTTER: return {\r\n            ...state,\r\n            showGutter: !state.showGutter\r\n        }\r\n        case CHANGE_WIDTH : return {\r\n            ...state,\r\n            width : payload\r\n        }\r\n        case CHANGE_OPS_TO_DEFAULT : return initialState\r\n        default : return state;\r\n    }\r\n}","const MODES = {\r\n    java : {\r\n        name : \"java\",\r\n        code : `public class Solution{\r\n    public static void main(String args[]){\r\n        System.out.println(\"Hello, World!\");\r\n    }\r\n}`\r\n        ,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n\r\n    },\r\n    python : {\r\n        name : \"python\",\r\n        code : `print(\"Hello, World!\")`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    },\r\n\r\n    javascript : {\r\n        name : \"javascript\",\r\n        code : `console.log(\"Hello, World!\");`,\r\n        stdin : \"\",\r\n        stdout : \"\",\r\n        stderr : \"\",\r\n    }\r\n}\r\n\r\nconst DEFAULT_MODE = \"java\";\r\nconst DEFAULT_THEME = \"monokai\";\r\nconst DEFAULT_FONT_SIZE = 18;\r\nconst MODE_OPTIONS = [\"java\" , \"javascript\" , \"python\"];\r\nconst THEME_OPTIONS = [\"monokai\" , \"github\" , \"kuroir\" , \"xcode\" , \"textmate\" , \"solarized_dark\" , \"solarized_light\"];\r\nconst OPTIONS = {\r\n    mode : DEFAULT_MODE,\r\n    theme : DEFAULT_THEME,\r\n    showGuttet : true,\r\n    placeholder : \"MADE IN <3 WITH MAYANK RAGHUVANSHI\",\r\n    width : 100,\r\n    fontSize : DEFAULT_FONT_SIZE\r\n}\r\n\r\nconst URL = \"http://localhost:4000\";\r\n\r\nexport default {\r\n    MODES,\r\n    DEFAULT_FONT_SIZE,\r\n    DEFAULT_THEME,\r\n    DEFAULT_MODE,\r\n    MODE_OPTIONS,\r\n    THEME_OPTIONS,\r\n    OPTIONS,\r\n    URL\r\n}","import CONSTANTS from '../constants';\r\nimport {\r\n    CHANGE_LANGUAGE,\r\n    CHANGE_STDIN,\r\n    EDITOR_CODE_ON_CHANGE,\r\n    EXECUTE_CODE,\r\n    SHOW_EXECUTION_RESULT\r\n}\r\n\r\nfrom \"../actionReducerConstants\";\r\n\r\nconst MODES = CONSTANTS.MODES\r\nconst initialState = MODES['java']\r\n\r\n\r\nexport default (state = initialState , {type , payload})=> {\r\n    switch (type) {\r\n        case CHANGE_LANGUAGE : return MODES[payload];\r\n        case EXECUTE_CODE : return {\r\n            ...state,\r\n            stdin : payload.stdin,\r\n            stdout : payload.stdout,\r\n        }\r\n        case EDITOR_CODE_ON_CHANGE : return {\r\n            ...state,\r\n            code : payload\r\n        }\r\n        case SHOW_EXECUTION_RESULT : return {\r\n            ...state,\r\n            stdout : payload.stdout,\r\n            stderr : payload.stderr\r\n        }\r\n        case CHANGE_STDIN : return {\r\n            ...state,\r\n            stdin : payload\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n","import {CHANGE_BROADCAST_MODE, SET_ROOM, SET_ROOM_WITH_BROADCAST} from \"../actionReducerConstants\";\r\n\r\nconst initialState = {\r\n    broadcastMode : true,\r\n    roomId : null,\r\n}\r\n\r\nexport default (state = initialState , {type , payload})=>{\r\n    switch (type) {\r\n        case SET_ROOM : return {\r\n            ...state,\r\n            roomId : payload\r\n        }\r\n        case CHANGE_BROADCAST_MODE : return {\r\n            ...state,\r\n            broadcastMode: !state.broadcastMode\r\n        }\r\n        case SET_ROOM_WITH_BROADCAST : return {\r\n            roomId: payload.roomId,\r\n            broadcastMode: payload.broadcastMode\r\n        }\r\n        default : return state\r\n    }\r\n}","import {INITIALIZE_SOCKET, REMOVE_SOCKET} from \"../actionReducerConstants\";\r\n\r\n\r\nconst initialState = {\r\n    socket : null,\r\n}\r\n\r\nexport default (state = initialState , {type , payload})=>{\r\n    switch (type) {\r\n        case INITIALIZE_SOCKET : return {\r\n            ...state,\r\n            socket: payload\r\n        }\r\n        case REMOVE_SOCKET : return {\r\n            ...state,\r\n            socket: null\r\n        }\r\n        default : return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport editorOptionReducer from './editorOptionReducer'\r\nimport editorModeReducer from \"./editorModeReducer\";\r\nimport roomReducer from \"./roomReducer\";\r\nimport socketReducer from \"./socketReducer\";\r\n\r\nexport default combineReducers({\r\n\r\n    editorMode : editorModeReducer,\r\n    editorOption : editorOptionReducer,\r\n    room : roomReducer,\r\n    socket : socketReducer\r\n\r\n})\r\n","export const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const CHANGE_FONT = \"CHANGE_FONT\";\r\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\r\nexport const CHANGE_SHOW_GUTTER = \"CHANGE_SHOW_GUTTER\";\r\nexport const CHANGE_WIDTH = \"CHANGE_WIDTH\";\r\nexport const CHANGE_OPS_TO_DEFAULT = \"CHANGE_OPS_TO_DEFAULT\";\r\nexport const INITIALIZE_SOCKET = \"INITIALIZE_SOCKET\";\r\nexport const REMOVE_SOCKET = \"REMOVE_SOCKET\";\r\nexport const SET_ROOM = \"SET_ROOM\";\r\nexport const CHANGE_BROADCAST_MODE = \"CHANGE_BROADCAST_MODE\";\r\nexport const SET_ROOM_WITH_BROADCAST = \"SET_ROOM_WITH_BROADCAST\";\r\nexport const EDITOR_CODE_ON_CHANGE = \"EDITOR_CODE_ON_CHANGE\";\r\nexport const EXECUTE_CODE = \"EXECUTE_CODE\";\r\nexport const SHOW_EXECUTION_RESULT = \"SHOW_EXECUTION_RESULT\";\r\nexport const CHANGE_STDIN = \"CHANGE_STDIN\"","import {createStore ,applyMiddleware, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\nexport default createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension && window.devToolsExtension()\r\n    )\r\n\r\n)\r\n\r\n","import {Select} from \"antd\";\r\nimport React from \"react\";\r\nconst Option = Select.Option;\r\nconst SelectComponent = ({name , options , defaultValue ,width , onChange})=>{\r\n\r\n    const style = {\r\n        margin : \"0 2px 0 2px\",\r\n        borderRadius : \"0\",\r\n        border : \"none\",\r\n        width : `${width}px`\r\n    }\r\n    return <Select name = {name} defaultValue = {defaultValue} style = {style} onChange = {onChange}>\r\n        {options.map(item=>(\r\n            <Option value = {item.value}>{item.name}</Option>\r\n        ))}\r\n    </Select>\r\n}\r\n\r\nexport default SelectComponent;","import React, {useEffect, useState} from \"react\";\r\nimport Select from './SelectComponent';\r\nimport {connect} from \"react-redux\";\r\nimport {changeThemeAction , changeFontAction ,changeShowGutterAction , changeWidthAction , changeOpsToDefaultAction} from \"../actions/editorOptionAction\"\r\nimport {changeLanguageAction} from \"../actions/editorModeAction\";\r\nimport {Button} from \"antd\";\r\nimport {PoweroffOutlined} from '@ant-design/icons';\r\nimport {executeCodeAction, executeSingleModeAction} from \"../actions/editorOperationAction\";\r\n\r\nconst EditorOpsComponent=(props)=>{\r\n    const {editorOption , editorMode , socket , room} = props;\r\n    const {\r\n            changeThemeAction ,\r\n            changeFontAction ,\r\n            changeLanguageAction ,\r\n            changeOpsToDefaultAction,\r\n            executeCodeAction,\r\n            executeSingleModeAction\r\n          } = props;\r\n\r\n    const handleExecuteButton=()=>{\r\n        executeSingleModeAction(editorMode);\r\n    }\r\n\r\n    return (\r\n        <div style={{margin : \"2px\" }}>\r\n            <Select\r\n                name = \"theme\"\r\n                options = {themeOptions}\r\n                defaultValue={editorOption.theme}\r\n                // width = {130}\r\n                onChange={changeThemeAction}\r\n            />\r\n            <Select\r\n                name = \"mode\"\r\n                options = {modeOptions}\r\n                defaultValue={editorMode.name}\r\n                // width = {100}\r\n                onChange={changeLanguageAction}\r\n            />\r\n            <Select\r\n                name = \"fontSize\"\r\n                options={fontOptions}\r\n                defaultValue={editorOption.fontSize}\r\n                // width={70}\r\n                onChange={changeFontAction}\r\n            />\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"green\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                icon = {<PoweroffOutlined/>}\r\n                onClick = {()=>handleExecuteButton()}\r\n                loading = {false}\r\n            >Run</Button>\r\n            <Button\r\n                type = \"primary\"\r\n                style = {{backgroundColor : \"red\" ,border  : \"none\" , margin : \"0 2px 0 2px\"}}\r\n                onClick = {changeOpsToDefaultAction}\r\n            >Reset</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst themeOptions = [\r\n    {\r\n        name : \"Monokai\",\r\n        value : \"monokai\",\r\n    },\r\n    {\r\n        name : \"GitHub\",\r\n        value : \"github\",\r\n    },\r\n    {\r\n        name : \"Kuroir\",\r\n        value : \"kuroir\",\r\n    },\r\n    {\r\n        name : \"Xcode\",\r\n        value : \"xcode\",\r\n    },\r\n    {\r\n        name : \"TextMate\",\r\n        value : \"textmate\",\r\n    },\r\n    {\r\n        name : \"Solarized Dark\",\r\n        value : \"solarized_dark\",\r\n    },\r\n    {\r\n        name : \"Solarized Light\",\r\n        value : \"solarized_light\",\r\n    },\r\n]\r\n\r\nconst modeOptions = [\r\n    {\r\n        name : \"Java\",\r\n        value : \"java\"\r\n    },\r\n    {\r\n        name : \"Python\",\r\n        value : \"python\"\r\n    },\r\n    {\r\n        name : \"JavaScript\",\r\n        value : \"javascript\"\r\n    },\r\n\r\n]\r\n\r\nconst fontOptions = [\r\n    {\r\n        name : 12,\r\n        value : 12\r\n    },\r\n    {\r\n        name : 14,\r\n        value : 14\r\n    },\r\n    {\r\n        name : 16,\r\n        value : 16\r\n    },\r\n    {\r\n        name : 18,\r\n        value : 18\r\n    },\r\n    {\r\n        name: 20,\r\n        value : 20\r\n    },\r\n    {\r\n        name : 24,\r\n        value : 24\r\n    },\r\n    {\r\n        name : 28,\r\n        value : 28\r\n    },\r\n    {\r\n        name : 32,\r\n        value : 32\r\n    },\r\n    {\r\n        name : 36,\r\n        value: 36\r\n    },\r\n    {\r\n        name : 40,\r\n        value : 40\r\n    }]\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editorOption: state.editorOption,\r\n    editorMode : state.editorMode,\r\n    socket : state.socket,\r\n    room : state.room\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps ,\r\n    {\r\n        changeLanguageAction,\r\n        changeThemeAction ,\r\n        changeFontAction ,\r\n        changeShowGutterAction ,\r\n        changeOpsToDefaultAction,\r\n        executeCodeAction,\r\n        executeSingleModeAction\r\n\r\n    })(EditorOpsComponent)","import {CHANGE_LANGUAGE, CHANGE_STDIN, EDITOR_CODE_ON_CHANGE} from \"../actionReducerConstants\";\r\n\r\nexport const changeLanguageAction =(language)=>(dispatch)=>{\r\n    return dispatch({\r\n        type : CHANGE_LANGUAGE,\r\n        payload : language\r\n    })\r\n}\r\n\r\nexport const editorCodeOnChangeAction = (code)=>dispatch=>{\r\n    return dispatch({\r\n        type : EDITOR_CODE_ON_CHANGE,\r\n        payload : code\r\n    })\r\n}\r\n\r\nexport const changeStdinAction =(stdin)=>dispatch=>{\r\n    dispatch({\r\n        type : CHANGE_STDIN,\r\n        payload : stdin\r\n    })\r\n}\r\n","import {\r\n    CHANGE_THEME,\r\n    CHANGE_FONT,\r\n    CHANGE_WIDTH,\r\n    CHANGE_SHOW_GUTTER,\r\n    CHANGE_OPS_TO_DEFAULT\r\n} from \"../actionReducerConstants\";\r\n\r\nexport const changeThemeAction = (themeName)=>dispatch=>{\r\n    return dispatch({\r\n       type: CHANGE_THEME,\r\n       payload : themeName\r\n    });\r\n}\r\n\r\nexport const changeFontAction = (fontSize)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_FONT,\r\n        payload : fontSize,\r\n    })\r\n}\r\nexport const changeWidthAction =(width)=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_WIDTH,\r\n        payload : width\r\n    })\r\n}\r\n\r\nexport const changeShowGutterAction =()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_SHOW_GUTTER,\r\n        payload : null\r\n    })\r\n}\r\n\r\nexport const changeOpsToDefaultAction=()=>dispatch=>{\r\n    return dispatch({\r\n        type : CHANGE_OPS_TO_DEFAULT,\r\n        payload : null\r\n    })\r\n}\r\n\r\n","// import {URL} from '../constants';\r\nimport axios from 'axios';\r\nimport {CHANGE_BROADCAST_MODE, SHOW_EXECUTION_RESULT} from \"../actionReducerConstants\";\r\nconst URL = \"http://localhost:4000\";\r\nexport const executeCodeAction=({broadcastMode , socket , code})=>dispatch=>{\r\n    console.log(broadcastMode,socket,code)\r\n    return dispatch({\r\n        type : CHANGE_BROADCAST_MODE\r\n    })\r\n}\r\n\r\nexport const executeSingleModeAction = (editorMode)=>(dispatch)=>{\r\n    axios.post(`${URL}/execute` , {editorMode})\r\n        .then(response=>{\r\n            dispatch({\r\n                type: SHOW_EXECUTION_RESULT,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            dispatch({\r\n                type : \"ERROR\",\r\n                payload : error\r\n            })\r\n        })\r\n}","import React from \"react\";\r\nimport AceEditor from \"react-ace/\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport 'ace-builds/src-noconflict/theme-xcode';\r\nimport 'ace-builds/src-noconflict/theme-textmate';\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\r\nimport 'ace-builds/src-noconflict/theme-solarized_light';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {editorCodeOnChangeAction} from \"../actions/editorModeAction\";\r\n\r\n\r\nconst EditorComponent = (props) => {\r\n    const {editorOption , editorMode} = props;\r\n    const {editorCodeOnChangeAction} = props;\r\n\r\n    return <div style={{margin : \"2px\" , width : \"70%\"}}>\r\n            <AceEditor\r\n            name = \"defaultCode\"\r\n            width = \"100%\"\r\n            height = \"80vh\"\r\n            mode={editorMode.name}\r\n            theme={editorOption.theme}\r\n            fontSize = {editorOption.fontSize}\r\n            showGuttet ={editorOption.shorthand}\r\n            placeholder = {editorOption.placeholder}\r\n            value = {editorMode.code}\r\n            onChange={editorCodeOnChangeAction}\r\n            setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 2,\r\n            }}\r\n            editorProps={{ $blockScrolling: true }}\r\n         />\r\n        </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    editorOption : state.editorOption,\r\n    editorMode : state.editorMode\r\n})\r\n\r\nexport default connect(mapStateToProps , {editorCodeOnChangeAction})(EditorComponent)","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport {connect} from 'react-redux';\r\nimport {changeStdinAction} from \"../actions/editorModeAction\";\r\n\r\n\r\n\r\nconst {TextArea} = Input;\r\nconst style = {\r\n    display : \"flex\",\r\n    flexDirection : \"column\",\r\n    width : \"30%\"\r\n}\r\n\r\n\r\nconst StdIO = (props) => {\r\n    const {editorMode} = props;\r\n    const {changeStdinAction} = props;\r\n    const output = editorMode.stderr.length>0 ? editorMode.stderr : editorMode.stdout;\r\n    const error = editorMode.stderr.length>0 ? true : false;\r\n    const outputBoxStyle = {\r\n        color : error?\"red\":\"black\",\r\n    }\r\n\r\n    return <div style={style}>\r\n        <label for = \"stdin\"><b>Input</b></label>\r\n        <TextArea id=\"stdin\" rows={9} value={editorMode.stdin} onChange={(e)=>changeStdinAction(e.target.value)} />\r\n        <label for = \"stdout\"><b>Output</b></label>\r\n        <TextArea id=\"stdout\" rows={9} value={output} style={outputBoxStyle} disabled={true}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    editorMode : state.editorMode\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n{\r\n    changeStdinAction\r\n}\r\n)(StdIO);","import React, {useEffect , useState} from \"react\";\r\nimport EditorComponent from \"./EditorComponent\";\r\nimport StdIOComponent from \"./StdIOComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport io from \"socket.io-client\"\r\nimport {URL} from '../constants';\r\nimport {initialiseSocketAction} from '../actions/socketAction'\r\n\r\nconst EditorMainComponent = (props) => {\r\n    const {room} = props;\r\n    const {initialiseSocketAction} = props;\r\n    const {socket} = props;\r\n    useEffect(()=>{\r\n        if(room.broadcastMode){\r\n            const Socket = io.connect(\"http://localhost:4000\");\r\n            initialiseSocketAction(Socket);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    } , [room])\r\n    return <div style={{display : \"flex\" , direction : \"row\" , width : \"100%\" , heght : \"100vh\"}}>\r\n        <EditorComponent/>\r\n        <StdIOComponent/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n  room : state.room,\r\n  socket : state.socket\r\n})\r\n\r\nexport default connect(mapStateToProps , {initialiseSocketAction})(EditorMainComponent)","import {INITIALIZE_SOCKET} from \"../actionReducerConstants\";\r\n\r\nexport const initialiseSocketAction=(socket)=>dispatch=>{\r\n    return dispatch({\r\n        type : INITIALIZE_SOCKET,\r\n        payload : socket\r\n    })\r\n}","import React from 'react';\nimport './App.css';\nimport store from './Store';\nimport {Provider} from \"react-redux\";\nimport EditorOps from \"./components/EditorOpsComponent\";\nimport EditorMainComponent from './components/EditorMainComponent'\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <div className=\"App\">\n              <EditorOps/>\n              <EditorMainComponent/>\n          </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}